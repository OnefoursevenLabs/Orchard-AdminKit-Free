@using OrchardCore.ContentManagement
@using OrchardCore.DisplayManagement.Views
@using OrchardCore.Forms.Models
@model ShapeViewModel<InputPart>
@{
    var formElementPart = Model.Value.ContentItem.As<FormElementPart>();
    var formInputElementPart = Model.Value.ContentItem.As<FormInputElementPart>();
    var elementId = formElementPart.Id;
    var fieldName = formInputElementPart.Name;
    var fieldId = !string.IsNullOrEmpty(elementId) ? elementId : !string.IsNullOrEmpty(fieldName) ? Html.GenerateIdFromName(fieldName) : default(string);
    var fieldValue = Model.Value.DefaultValue;
    var fieldClass = "form-control";
    var isChecked = false;

    if (ViewData.ModelState.TryGetValue(fieldName, out var fieldEntry))
    {
        if (Model.Value.Type == "checkbox" || Model.Value.Type == "radio")
        {
            isChecked = fieldEntry.AttemptedValue == fieldValue;
        }
        else
        {
            fieldValue = fieldEntry.AttemptedValue;
        }

        if (fieldEntry.Errors.Count > 0)
        {
            fieldClass = "form-control input-validation-error";
        }
    }
}
@if (Model.Value.Type != "checkbox") {
    <input id="@fieldId" name="@fieldName" type="@Model.Value.Type" class="@fieldClass" value="@fieldValue" placeholder="@Model.Value.Placeholder" @(isChecked ? "checked" :  "") />
} else {
    <label class="form-check">
            <input id="@fieldId" name="@fieldName" class="form-check-input" type="checkbox" value="@fieldValue" @(isChecked ? "checked" :  "") placeholder="@Model.Value.Placeholder">
            <span class="form-check-label">
              @fieldName
            </span>
    </label>
}