@using Microsoft.AspNetCore.Mvc.ModelBinding
@model OrchardCore.Users.ViewModels.RegisterExternalLoginViewModel

@{
    ViewLayout = "Layout__Login";
}

<form asp-controller="Account" asp-action="RegisterExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal no-multisubmit">
    <h4>@T["Create a new account."]</h4>
    <p class="text-info">
        @T["You've successfully authenticated with <strong>{0}</strong>. Please fill the form below and click the Register button to complete the registration.", ViewData["LoginProvider"]]
    </p>
    <hr />
    <div asp-validation-summary="All" class="text-danger"></div>

    @if (!Model.NoUsername || String.IsNullOrWhiteSpace(Model.UserName) || ViewData.ModelState.GetFieldValidationState("UserName") == ModelValidationState.Invalid) {
        <div class="mb-3">
            <label asp-for="UserName" class="form-label">@T["Username"]</label>
            <input asp-for="UserName" class="form-control form-control-lg" autofocus />
            <span asp-validation-for="UserName" class="text-danger"></span>
        </div>
    }

    @if (!Model.NoEmail || String.IsNullOrWhiteSpace(Model.Email) || ViewData.ModelState.GetFieldValidationState("Email") == ModelValidationState.Invalid) {
        <div class="mb-3">
            <label asp-for="Email" class="form-label">@T["Email"]</label>
            <input asp-for="Email" class="form-control form-control-lg" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    }

    @if (!Model.NoPassword) {
        <div class="mb-3">
            <label asp-for="Password" class="form-label">@T["Password"]</label>
            <input asp-for="Password" class="form-control form-control-lg" />
            <span asp-validation-for="Password" class="text-danger"></span> 
        </div>

        <div class="mb-3">
            <label asp-for="ConfirmPassword" class="form-label">@T["Confirm password"]</label>
            <input asp-for="ConfirmPassword" class="form-control form-control-lg" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
    }

    @await RenderSectionAsync("AfterRegister", required: false)

    <div class="text-center mt-3">
        <button type="submit" class="btn btn-lg btn-primary">@T["Register"]</button>
    </div>
</form>
