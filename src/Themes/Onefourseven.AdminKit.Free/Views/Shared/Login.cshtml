@using Microsoft.AspNetCore.Identity
@using OrchardCore.Entities
@using OrchardCore.Settings
@using OrchardCore.Users
@using OrchardCore.Users.Models
@model OrchardCore.Users.ViewModels.LoginViewModel
@inject SignInManager<IUser> SignInManager
@inject ISiteService SiteService
@inject UserManager<IUser> UserManager;
@{
    ViewLayout = "Layout__Login";

    var userCanRegister = (await SiteService.GetSiteSettingsAsync()).As<RegistrationSettings>().UsersCanRegister == UserRegistrationType.AllowRegistration;
    var allowResetPassword = (await SiteService.GetSiteSettingsAsync()).As<ResetPasswordSettings>().AllowResetPassword;
    var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
    var disableLocalLogin = (await SiteService.GetSiteSettingsAsync()).As<LoginSettings>().DisableLocalLogin;
}


<form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
    <div class="mb-3">
        <label class="form-label">@T["Username"]</label>
        <input class="form-control form-control-lg" type="text" name="Username" placeholder="Enter your username/email" autofocus asp-for="UserName" />
    </div>
    <div class="mb-3">
        <label class="form-label">@T["Password"]</label>
        <input class="form-control form-control-lg" type="password" name="password" placeholder="Enter your password" asp-for="Password" />
        <span asp-validation-for="Password" class="text-danger"></span>

        @if (allowResetPassword) {
            <a asp-controller="ResetPassword" asp-action="ForgotPassword"><small>@T["Forgot your password?"]</small></a>
        }
    </div>
    <div>
        <label class="form-check">
            <input class="form-check-input" type="checkbox" value="remember-me" name="remember-me" checked asp-for="RememberMe">
            <span class="form-check-label">
                @T["Remember me"]
            </span>
        </label>
    </div>

    @await RenderSectionAsync("AfterLogin", required: false)
    <div class="text-center mt-3">
        <button type="submit" class="btn btn-lg btn-primary">Sign in</button>
    </div>
</form>
@if (userCanRegister) {
    <p class="text-muted text-center"><small>Do not have an account?</small></p>
    <a asp-controller="Registration" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]" class="btn btn-sm btn-white btn-block">@T["Register as a new user"]</a>
}


@if (loginProviders.Count > 0) {
    <div class="text-center mt-3">
        <section>
            <h4>@T["Use another service to log in"]</h4>
            <hr />
            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal no-multisubmit">
                <div>
                    <p>
                        @foreach (var provider in loginProviders) {
                            <button type="submit" class="btn btn-primary @(disableLocalLogin ? "w-100" : String.Empty)" name="provider" value="@provider.Name" title="@T["Log in using your {0} account", provider.DisplayName]">@provider.DisplayName</button>
                            @if (disableLocalLogin) {
                                <br />
                            }
                        }
                    </p>
                </div>
            </form>
        </section>
    </div>
}
